{"remainingRequest":"/Users/arirudiana/Desktop/shayna/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/arirudiana/Desktop/shayna/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/arirudiana/Desktop/shayna/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/arirudiana/Desktop/shayna/src/views/Product.vue?vue&type=template&id=35171425&scoped=true&","dependencies":[{"path":"/Users/arirudiana/Desktop/shayna/src/views/Product.vue","mtime":1592301888744},{"path":"/Users/arirudiana/Desktop/shayna/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arirudiana/Desktop/shayna/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/Users/arirudiana/Desktop/shayna/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/arirudiana/Desktop/shayna/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}